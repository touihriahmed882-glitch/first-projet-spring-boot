// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using serviceoncologie.Data;

#nullable disable

namespace serviceoncologie.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250302150511_addtablesrelations")]
    partial class addtablesrelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("serviceoncologie.Data.Models.DemandeRdv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateSouhaitee")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("MedecinId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("RdvId")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MedecinId");

                    b.HasIndex("PatientId");

                    b.HasIndex("RdvId")
                        .IsUnique();

                    b.ToTable("DemandesRdvs");
                });

            modelBuilder.Entity("serviceoncologie.Data.Models.Paiement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatePaiement")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModePaiement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("RdvId")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("RdvId")
                        .IsUnique();

                    b.ToTable("Paiements");
                });

            modelBuilder.Entity("serviceoncologie.Data.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NCIN")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroTelephone")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SituationSocial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SousCategorie")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("serviceoncologie.Data.Models.Rdv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateRdv")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DemandeRdvId")
                        .HasColumnType("int");

                    b.Property<int?>("MedecinId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DemandeRdvId");

                    b.HasIndex("MedecinId");

                    b.HasIndex("PatientId");

                    b.HasIndex("UserId");

                    b.ToTable("Rdvs");
                });

            modelBuilder.Entity("serviceoncologie.Data.Models.Tache", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Taches");
                });

            modelBuilder.Entity("serviceoncologie.Data.Models.TacheUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TacheId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TacheId");

                    b.HasIndex("UserId");

                    b.ToTable("TacheUsers");
                });

            modelBuilder.Entity("serviceoncologie.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateDeNaissance")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NCIN")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sexe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SituationSocial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("serviceoncologie.Data.Models.DemandeRdv", b =>
                {
                    b.HasOne("serviceoncologie.Data.Models.User", "Medecin")
                        .WithMany()
                        .HasForeignKey("MedecinId");

                    b.HasOne("serviceoncologie.Data.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("serviceoncologie.Data.Models.Rdv", "Rdv")
                        .WithOne()
                        .HasForeignKey("serviceoncologie.Data.Models.DemandeRdv", "RdvId");

                    b.Navigation("Medecin");

                    b.Navigation("Patient");

                    b.Navigation("Rdv");
                });

            modelBuilder.Entity("serviceoncologie.Data.Models.Paiement", b =>
                {
                    b.HasOne("serviceoncologie.Data.Models.Patient", "Patient")
                        .WithMany("Paiements")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("serviceoncologie.Data.Models.Rdv", "Rdv")
                        .WithOne()
                        .HasForeignKey("serviceoncologie.Data.Models.Paiement", "RdvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("Rdv");
                });

            modelBuilder.Entity("serviceoncologie.Data.Models.Rdv", b =>
                {
                    b.HasOne("serviceoncologie.Data.Models.DemandeRdv", "DemandeRdv")
                        .WithMany()
                        .HasForeignKey("DemandeRdvId");

                    b.HasOne("serviceoncologie.Data.Models.User", "Medecin")
                        .WithMany()
                        .HasForeignKey("MedecinId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("serviceoncologie.Data.Models.Patient", "Patient")
                        .WithMany("Rdvs")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("serviceoncologie.Data.Models.User", null)
                        .WithMany("Rdvs")
                        .HasForeignKey("UserId");

                    b.Navigation("DemandeRdv");

                    b.Navigation("Medecin");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("serviceoncologie.Data.Models.TacheUser", b =>
                {
                    b.HasOne("serviceoncologie.Data.Models.Tache", "Tache")
                        .WithMany("TacheUsers")
                        .HasForeignKey("TacheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("serviceoncologie.Data.Models.User", "User")
                        .WithMany("TacheUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tache");

                    b.Navigation("User");
                });

            modelBuilder.Entity("serviceoncologie.Data.Models.Patient", b =>
                {
                    b.Navigation("Paiements");

                    b.Navigation("Rdvs");
                });

            modelBuilder.Entity("serviceoncologie.Data.Models.Tache", b =>
                {
                    b.Navigation("TacheUsers");
                });

            modelBuilder.Entity("serviceoncologie.Data.Models.User", b =>
                {
                    b.Navigation("Rdvs");

                    b.Navigation("TacheUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
